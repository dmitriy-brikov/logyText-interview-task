{"version":3,"sources":["context.js","components/NavDrawer.js","components/NavBar.js","components/TodoForm.js","components/TodoList.js","components/DeletedList.js","components/ComplitedList.js","reducer.js","index.js","usePersist.js"],"names":["Store","React","createContext","todos","complited","deleted","myTheme","useStyles","makeStyles","list","width","info","NavDrawer","props","classes","Drawer","anchor","open","drawerOpened","onClose","toggleDrawer","className","onClick","onKeyDown","List","ListItem","ListItemText","primary","Divider","button","component","href","ListItemIcon","GitHub","theme","root","flexGrow","menuButton","marginRight","spacing","title","navBarDarkTheme","backgroundColor","orange","NavBar","useContext","state","dispatch","useState","setDrawerOpened","ToggleButton","Brightness7","Brightness4","booleanValue","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Menu","Typography","variant","Tooltip","mode","type","payload","changeTheme","buttonDarkTheme","textField","input","borderBottom","TodoForm","todo","setTodo","handleTodoAdd","e","Box","mt","Grid","container","alignItems","item","xs","sm","TextField","InputProps","id","label","value","onChange","target","onKeyUp","keyCode","Button","fullWidth","size","TodoList","comment","count","length","Paper","elevation","p","map","t","divider","key","ListItemSecondaryAction","placement","arrow","style","fill","green","DeletedList","ComplitedList","reducer","action","includes","filter","App","globalStore","context","persistedContext","localStorage","getItem","JSON","parse","usePersistedContext","useEffect","setItem","stringify","usePersistedReducer","useReducer","createMuiTheme","palette","Container","Provider","ThemeProvider","CssBaseline","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.1c754b5c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Store = React.createContext({\r\n  todos: [\r\n    \"Learn HTML and CSS\",\r\n    \"Learn JavaScript(ES6+)\",\r\n    \"Design with Figma\",\r\n    \"Develop applications with 'React' and 'Material-UI'\"\r\n  ],\r\n  complited: [],\r\n  deleted: [],\r\n  myTheme: \"light\"\r\n});\r\n\r\nexport default Store;\r\n","import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Drawer,\r\n  List,\r\n  Divider,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText\r\n} from \"@material-ui/core\";\r\nimport { GitHub } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 180\r\n  },\r\n  info: {\r\n    \"text-align\": \"center\",\r\n    \"font-weight\": \"bold\"\r\n  }\r\n});\r\n\r\nconst NavDrawer = props => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Drawer\r\n      anchor=\"left\"\r\n      open={props.drawerOpened}\r\n      onClose={props.toggleDrawer(false)}\r\n    >\r\n      <div\r\n        className={classes.list}\r\n        onClick={props.toggleDrawer(false)}\r\n        onKeyDown={props.toggleDrawer(false)}\r\n      >\r\n        <List>\r\n          <ListItem className={classes.info}>\r\n            <ListItemText primary=\"Contact\" />\r\n          </ListItem>\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button component=\"a\" href=\"https://github.com/dmitriy-brikov\">\r\n            <ListItemIcon>\r\n              <GitHub />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"GitHub\" />\r\n          </ListItem>\r\n        </List>\r\n        <Divider />\r\n      </div>\r\n    </Drawer>\r\n  );\r\n};\r\nexport default NavDrawer;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Menu, Brightness4, Brightness7 } from \"@material-ui/icons\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  IconButton,\r\n  Tooltip\r\n} from \"@material-ui/core\";\r\n\r\nimport Store from \"../context\";\r\nimport NavDrawer from \"./NavDrawer\";\r\nimport { orange } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  },\r\n  navBarDarkTheme: {\r\n    backgroundColor: orange[500]\r\n  }\r\n}));\r\n\r\nconst NavBar = () => {\r\n  const { state, dispatch } = useContext(Store);\r\n  const [drawerOpened, setDrawerOpened] = useState(false);\r\n\r\n  const classes = useStyles();\r\n  let mode;\r\n  const changeTheme = (mode) => {\r\n    if (state.myTheme === \"dark\") {\r\n      mode = \"light\";\r\n    } else {\r\n      mode = \"dark\";\r\n    }\r\n    dispatch({ type: \"THEME\", payload: mode });\r\n  };\r\n\r\n  const ToggleButton = () => {\r\n    if (state.myTheme === \"dark\") {\r\n      return <Brightness7 />;\r\n    } else {\r\n      return <Brightness4 />;\r\n    }\r\n  };\r\n  const toggleDrawer = booleanValue => () => {\r\n    setDrawerOpened(booleanValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar className={state.myTheme === \"dark\" ? classes.navBarDarkTheme : ''} position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={toggleDrawer(true)}\r\n          >\r\n            <Menu />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Todo List App\r\n          </Typography>\r\n\r\n          <Tooltip title=\"Toggle light/dark theme\">\r\n            <IconButton color=\"inherit\" onClick={() => changeTheme(mode)}>\r\n              <ToggleButton />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <NavDrawer drawerOpened={drawerOpened} toggleDrawer={toggleDrawer} />\r\n    </div>\r\n  );\r\n};\r\nexport default NavBar;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Grid, Button, TextField, makeStyles, Box } from \"@material-ui/core\";\r\nimport Store from \"../context\";\r\nimport { orange } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  buttonDarkTheme: {\r\n    backgroundColor: orange[500],\r\n  },\r\n  textField: {\r\n    width: \"95%\",\r\n    \"&.Mui-focused\": {\r\n      \"&.MuiFormLabel-root\": {\r\n        color: orange[500] \r\n      },\r\n    },\r\n  },\r\n  input: {\r\n    \"&.Mui-focused\": {\r\n      '&.MuiInput-underline:after': {\r\n        borderBottom: \"2px solid orange\",\r\n      },\r\n    },\r\n  }\r\n}));\r\n\r\nconst TodoForm = () => {\r\n  const classes = useStyles();\r\n  const { state, dispatch } = useContext(Store);\r\n\r\n  const [todo, setTodo] = useState(\"\");\r\n\r\n  const handleTodoChange = e => {\r\n    setTodo(e.target.value);\r\n  };\r\n\r\n  const handleSubmitForm = e => {\r\n    if (e.keyCode === 13) handleTodoAdd();\r\n  };\r\n\r\n  const handleTodoAdd = e => {\r\n    dispatch({ type: \"ADD_TODO\", payload: todo });\r\n    setTodo(\"\");\r\n  };\r\n\r\n  return (\r\n    <Box mt={2}>\r\n      <Grid container alignItems=\"flex-end\" spacing={0}>\r\n        <Grid item xs={12} sm={10}>\r\n          \r\n          <TextField  \r\n          InputProps={state.myTheme === \"dark\" ? { className: classes.input } : {}}\r\n          className={classes.textField}  \r\n          id=\"standart-basic\"\r\n          label=\"Enter new todo\"\r\n          value={todo}\r\n          onChange={handleTodoChange}\r\n          onKeyUp={handleSubmitForm}\r\n          /> \r\n      </Grid>\r\n      <Grid item xs={12} sm={2}>\r\n        <Button\r\n          fullWidth\r\n          variant=\"contained\"\r\n          className={state.myTheme === \"dark\" ? classes.buttonDarkTheme : classes.button}\r\n          color={state.myTheme === \"dark\" ? 'inherit' : 'primary'}\r\n          size=\"small\"\r\n          onClick={handleTodoAdd}\r\n        >\r\n          Add\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n    </Box>\r\n  );\r\n};\r\nexport default TodoForm;\r\n","import React, { useContext } from \"react\";\r\nimport Store from \"../context\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckBox from '@material-ui/icons/CheckBox';\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  IconButton,\r\n  Grid,\r\n  Typography,\r\n  Tooltip,\r\n  Paper,\r\n  Box\r\n} from \"@material-ui/core\";\r\nimport { green } from \"@material-ui/core/colors\";\r\n\r\nconst TodoList = () => {\r\n  const { state, dispatch } = useContext(Store);\r\n\r\n  let count = state.todos.length;\r\n  let comment;\r\n  if (count === 0) {\r\n    comment = \"So when you are free, start another work to get tired!\";\r\n  } else {\r\n    comment = \"\";\r\n  }\r\n\r\n  return (\r\n    <Paper elevation={2}>\r\n        <Box mt={3} p={2}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h6\">Todo List ({count})</Typography>\r\n              <Typography>{comment}</Typography>\r\n              <Box mt={1}>\r\n                <List>\r\n                  {state.todos.map(t => (\r\n                    <ListItem divider key={t}>\r\n                      <ListItemText primary={t} />\r\n                      <ListItemSecondaryAction>\r\n                        <Tooltip placement=\"top\" title=\"Complite\" arrow>\r\n                          <IconButton\r\n                            edge=\"end\"\r\n                            aria-label=\"complited\"\r\n                            onClick={() => dispatch({ type: \"COMPLITED\", payload: t })}\r\n                          >\r\n                            <CheckBox style={{fill: green[500]}}/>\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip placement=\"top\" title=\"Delete\" arrow>\r\n                          <IconButton\r\n                            edge=\"end\"\r\n                            aria-label=\"delete\"\r\n                            onClick={() => dispatch({ type: \"DELETE\", payload: t })}\r\n                          >\r\n                            <DeleteIcon color=\"error\"/>\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                  ))}\r\n                </List>\r\n              </Box>\r\n            </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\nexport default TodoList;\r\n","import React, { useContext } from \"react\";\r\nimport Store from \"../context\";\r\nimport Cached from \"@material-ui/icons/Cached\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemSecondaryAction,\r\n  IconButton,\r\n  Grid,\r\n  Typography,\r\n  Tooltip,\r\n  Paper,\r\n  Box\r\n} from \"@material-ui/core\";\r\n\r\nconst DeletedList = () => {\r\n  const { state, dispatch } = useContext(Store);\r\n\r\n  let count = state.deleted.length;\r\n  let comment;\r\n  if (count === 0) {\r\n    comment = \"You are good at all tasks!\";\r\n  } else {\r\n    comment = \"\";\r\n  }\r\n\r\n  return (\r\n    <Paper elevation={2}>\r\n        <Box mt={3} p={2}>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                <Typography variant=\"h6\">Deleted ({count})</Typography>\r\n                <Typography>{comment}</Typography>\r\n                <Box mt={1}>\r\n                    <List>\r\n                    {state.deleted.map(t => (\r\n                        <ListItem  divider key={t}>\r\n                        <Typography color=\"error\" component=\"del\">{t}</Typography>\r\n                            <ListItemSecondaryAction>\r\n                                <Tooltip placement=\"top\" title=\"Restore\" arrow>\r\n                            <IconButton\r\n                            edge=\"end\"\r\n                            aria-label=\"restore\"\r\n                            onClick={() => dispatch({ type: \"RESTORE\", payload: t })}\r\n                            >\r\n                            <Cached />\r\n                                    </IconButton>\r\n                                    </Tooltip>\r\n                        </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                    ))}\r\n                    </List>\r\n                </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    </Paper>\r\n  );\r\n};\r\nexport default DeletedList;\r\n","import React, { useContext } from \"react\";\r\nimport Store from \"../context\";\r\nimport Cached from \"@material-ui/icons/Cached\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemSecondaryAction,\r\n  IconButton,\r\n  Grid,\r\n  Typography,\r\n  Tooltip,\r\n  Box,\r\n  Paper\r\n} from \"@material-ui/core\";\r\nimport { green } from \"@material-ui/core/colors\";\r\n\r\nconst ComplitedList = () => {\r\n  const { state, dispatch } = useContext(Store);\r\n\r\n  let count = state.complited.length;\r\n  let comment;\r\n  if (count === 0) {\r\n    comment = \"Have you rested enough to start new tasks?\";\r\n  } else {\r\n    comment = \"\";\r\n  }\r\n\r\n  return (\r\n    <Paper elevation={2}>\r\n        <Box mt={3} p={2}>\r\n            <Grid container  spacing={2}>\r\n                <Grid item xs={12}>\r\n                <Typography variant=\"h6\">Complited ({count})</Typography>\r\n                <Typography>{comment}</Typography>\r\n                <Box mt={1}>\r\n                    <List>\r\n                    {state.complited.map(t => (\r\n                        <ListItem  divider key={t}>\r\n                        <Typography style={{color: green[500]}} >{t}</Typography>\r\n                        <ListItemSecondaryAction>\r\n                            <Tooltip placement=\"top\" title=\"Restore\" arrow>\r\n                                <IconButton\r\n                                edge=\"end\"\r\n                                aria-label=\"restore\"\r\n                                onClick={() => dispatch({ type: \"RESTORE\", payload: t })}\r\n                                >\r\n                                    <Cached />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                    ))}\r\n                    </List>\r\n                </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    </Paper>\r\n  );\r\n};\r\nexport default ComplitedList;\r\n","const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TODO\":\r\n      if (!action.payload) {\r\n        return state;\r\n      }\r\n      if (state.todos.includes(action.payload)) {\r\n        return state;\r\n      }\r\n      return {\r\n        ...state,\r\n        todos: [...state.todos, action.payload]\r\n      };\r\n    case \"COMPLITED\": \r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter(t => t !== action.payload),\r\n        complited: [action.payload, ...state.complited]\r\n      };\r\n    case \"DELETE\":\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter(t => t !== action.payload),\r\n        complited: state.complited.filter(t => t !== action.payload),\r\n        deleted: [action.payload, ...state.deleted]\r\n      };\r\n    case \"RESTORE\": \r\n      return {\r\n        ...state,\r\n        deleted: state.deleted.filter(t => t !== action.payload),\r\n        complited: state.complited.filter(t => t !== action.payload),\r\n        todos: [action.payload, ...state.todos]\r\n      };\r\n    case \"THEME\":\r\n      return {\r\n        ...state,\r\n        myTheme: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducer;\r\n","import React, { useContext, useReducer } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport './app.css'\r\n\r\n// Add components\r\nimport NavBar from \"./components/NavBar\";\r\nimport TodoForm from \"./components/TodoForm\";\r\nimport TodoList from \"./components/TodoList\";\r\nimport DeletedList from \"./components/DeletedList\";\r\nimport ComplitedList from \"./components/ComplitedList\";\r\n\r\n//Add context, reducer and usePersist(LocalStorage)\r\nimport Store from \"./context\";\r\nimport reducer from \"./reducer\";\r\nimport { usePersistedContext, usePersistedReducer } from \"./usePersist\";\r\n\r\n// Metarial-UI Theme(Dark or Light)\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { createMuiTheme, CssBaseline, Container } from \"@material-ui/core\";\r\n\r\nconst App = () => {\r\n  const globalStore = usePersistedContext(useContext(Store), \"state\");\r\n\r\n  const [state, dispatch] = usePersistedReducer(\r\n    useReducer(reducer, globalStore),\r\n    \"state\"\r\n  );\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      type: state.myTheme // \"light\" or \"dark\"\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      <Store.Provider value={{ state, dispatch }}>\r\n        <ThemeProvider theme={theme}>\r\n          <CssBaseline />\r\n          <NavBar />\r\n          <TodoForm />\r\n          <TodoList />\r\n          <ComplitedList/>\r\n          <DeletedList/>\r\n        </ThemeProvider>\r\n      </Store.Provider>\r\n    </Container>\r\n  );\r\n};\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n","import { useEffect } from \"react\";\r\n\r\nexport const usePersistedContext = (context, key = \"state\") => {\r\n  const persistedContext = localStorage.getItem(key);\r\n  return persistedContext ? JSON.parse(persistedContext) : context;\r\n};\r\n\r\nexport const usePersistedReducer = ([state, dispatch], key = \"state\") => {\r\n  useEffect(() => localStorage.setItem(key, JSON.stringify(state)), [\r\n    key,\r\n    state\r\n  ]);\r\n  return [state, dispatch];\r\n};\r\n"],"sourceRoot":""}